I want to implement a complete Feedback System for my educational web app "QuickRevise".

üîπ PART 1: USER FEEDBACK UI

üìç Features for the **student/teacher (user)**:
1. A clean ‚ÄúFeedback‚Äù page accessible from sidebar.
2. Tabs: "Submit Feedback" and "My Feedback".
3. Categories to choose from: 
   - General Feedback
   - Technical Issue (bugs/errors)
   - Feature Suggestion
4. Fields to collect:
   - Board (Dropdown: CBSE/ICSE/ISC/State Board)
   - Class (Numeric)
   - Subject (Text)
   - Feedback Type (Dropdown: General, Technical, Feature)
   - Feedback Text (Textarea)
   - Optional File Upload (PDF, DOC, max 5MB)
5. Confirmation message after submission.

üìÅ Store all feedback in a backend table named `feedbacks` with:
   - id
   - name
   - email
   - board
   - class
   - subject
   - feedback_type
   - message
   - attachment (file link)
   - timestamp
   - status (default: "Pending")

---

üîπ PART 2: ADMIN FEEDBACK DASHBOARD

üìç Features for the **Admin Panel**:
1. Show cards at top:
   - Total Feedbacks
   - Critical Issues
   - Feature Suggestions
   - Resolved
   - Pending
2. Table of all feedback with:
   - ID
   - Date
   - User Name & Email
   - Board
   - Class
   - Subject
   - Type
   - Short Preview
   - File (icon if attached)
   - Status (Pending, Reviewed, Resolved)
   - Actions: View, Update Status, Reply
3. Filters:
   - Feedback Type
   - Subject
   - Date Range
   - Status
   - Search
4. Ability to export all feedback as CSV.

‚úÖ Also include ability to:
- Mark feedback as resolved
- Reply to user (optional comment/email)
- Filter by feedback type or status
- Future-proof for AI summary analytics

Keep mobile-friendly layout and ensure clean UI/UX. Build frontend in React (if possible) and backend using Node.js or Supabase/Postgres (or Firebase if easier). Save files if uploaded.

Label this module as "Feedback System".

Do not generate quiz logic ‚Äî focus only on feedback module.
